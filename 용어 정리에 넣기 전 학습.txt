///
개인적으로 공부하기 위해 메모중인 텍스트 공간
이론적인 부분부터 다시 시작하기 때문에 다른 사람의 글에서부터 가져오는 것으로부터 시작하고 있음
이것을 바탕으로 디자인 패턴이나 프로그램의 구조를 분석하면서 이해할 것임
/// 

메모리 구조
코드 영역: 프로그램 상에서 실행할 소스코드가 저장되는 영역
>> CPU에서 해당 코드들을 가져가서 하나씩 처리
>> 프로그램이 실행되고나서부터 종료될 때까지 메모리에 계속 남아있음


데이터 영역: 전역변수와 정적(static)변수가 저장되는 영역
>> 전역 변수: 프로그램이 실행될 때 생성되어, 종료될 때까지 소멸되지 않는 변수
>> 정적 변수: 


힙 영역: 프로그래머가 직접 공간을 할당, 해제하는 메모리 공간
>> 동적 할당?
>> malloc() 또는 new 연산자를 통해 메모리를 할당하고 free또는 delete연산자를 통해 메모리를 해제
>> FIFO(먼저 들어간 놈이 먼저 나감)의 방식
	-> 메모리의 낮은 주소에서 높은 주소의 방향으로 할당되기 때문>>???


스택 영역: 프로그램이 자동으로 사용하는 (임시 메모리 영역?)
>>정적 할당?


정적할당: 컴파일 단계에서 필요한 메모리 공간을 할당하는 것
동적할당: 실행 단계에서 공간을 할당해주는 것

정적 메모리: 
동적 메모리: 

할당: 무언가를 제공한다는 의미?

변수: 프로그램 코드 상에서 기능을 구현하기 전에 바탕이 될 재료
전역 변수: 함수 밖에서 선언한 변수. 프로그램 종료 전까지 잔재. 클래스 외부에서 선언
지역 변수: 함수 내에서 선언한 변수. 해당 함수 종료시 소멸
정적 변수: 
멤버 변수: 함수 밖에서 선언한 변수. 프로그램 종료 전까지 메모리에 잔재. 클래스 내부에서 선언
정적 멤버 변수: 

전역변수와 멤버변수는 같은 의미로 봐도 무방한가?
>>멤버 변수는 클래스 내에 함수 외적으로 선언한 변수?이고
>>전역 변수는 클래스 외부에서 선언한 변수이다?