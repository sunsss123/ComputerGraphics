Meshes.cpp 예제

Meshes.cpp 에서 수정된 부분
1. InitGeometry()
2. SetupMatrices()

Meshes 실습
1.InitGeometry의 작동방법 이해하기
>>임시 버퍼공간을 지역변수로 생성하고
>> Tigger.x파일이라는 메시가 존재하는지 조건문을 통해 검사한다
- x파일을 삭제하고 실행
>> 현재 폴더 안에 존재하지않으면 한칸 상위폴더까지 검사하고
>> 상위 폴더에도 x메시파일이 존재하지 않으면 윈도우 메시지창을 띄우면서 실행을 중지한다
- x파일을 가지고있고 bmp파일(텍스처파일)을 삭제하고 실행
>>  x메시 파일이 존재할 때 해당 파일이 가지고 있는 재질과 텍스쳐정보를 별도로 저장
	-> 머테리얼 개수만큼 머테리얼 구조체 / 텍스처 구조체 생성 (Array)
>>머테리얼 구조체 배열 수만큼 재질정보를 복사하고
>>엠비언트 값을 디퓨즈 값으로 초기화한다
>>초기화 후에 머테리얼 구조체의 텍스처 정보를 Null값으로 자리를 비워놓는다
>>이후 x파일에 맞는 텍스처파일로 맞춰주기 위해 텍스처 파일을 가지고있는지 로드작업을 수행한다
>>텍스처 파일이 현재와 상위폴더 두 곳 전부 존재하지 않는다면
>>텍스처 파일이 없다는 메시지창을 띄운다음
>>텍스처 처리가 되지않은 tiger형태를 가진 물체만
  화면에 실시간으로 보여준다

2.Tigger.x, Tigger.bmp파일의 역할 이해하기
-Tiger.x파일
>>Tiger 머테리얼을 제공하는 파일
>>물체에 대한 모양정도만 나타냄
-Tiger.bmp파일
>>tiger 머테리얼에 맞는 색상과 디자인을 제공함

3.Mesh와 UV좌표는 어떻게 구성되는가?


Meshes 문제
3D모델데이터는 어떻게 제작되는가?


Meshes 용어정리

X파일: 메시, 머테리얼, 텍스처 등 물체의 형태를 잡아주는 정보들을 저장하고있는 파일

Mesh: 3개의 점들이 모여 하나의 면을 형성하는 폴리곤 단위가 
	  여러개 모여서 물체를 만들어낼 바탕이 되는 요소

Material: 메시가 뼈대라고 한다면 머테리얼(재질)은 찰흙같은 개념?
		  메시에서 형태를 잡아주어 각 메시에 대해 특징을 부여하는 요소

Texture: 머테리얼이 적용된 물체에 색상이나 디자인을 적용하여 하나의 
		 형상화 시켜주는 요소
UV: 